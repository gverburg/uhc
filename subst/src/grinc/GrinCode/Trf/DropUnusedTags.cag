Removes all the unused tags in the constructor, eval and apply maps.
Note: run after inlining eval and apply.

%%[0
%include lhs2TeX.fmt
%include afp.fmt
%%]

%%[8 import({GrinCode/AbsSyn})
%%]

%%[8.wrapper
WRAPPER GrAGItf
%%]

%%[8 hs module {%{GRIN}GrinCode.Trf.DropUnusedTags} import(qualified Data.Set as Set)
%%]

%%[8 hs import({%{EH}Base.Common}, {%{GRIN}GRINCCommon}, {%{EH}GrinCode}) export(dropUnusedTags)
dropUnusedTags :: GrModule -> GrModule
dropUnusedTags grmod = let t = wrap_GrAGItf (sem_GrAGItf (GrAGItf_AGItf grmod))
                                            (Inh_GrAGItf)
                                in grTrf_Syn_GrAGItf t
%%]

%%[8
ATTR GrAGItf [ | | grTrf: GrModule ]
ATTR AllNT [ | | grTrf: SELF ]

%%]

TODO: which basic Tags should be available

%%[8.retrieveUsedTags
ATTR AllBind AllGlobal AllExpr [ | usedTags: {Set.Set GrTag} | ]

SEM GrModule
  | Mod  globalL  .  usedTags  =  Set.empty
         bindL    .  usedTags  =  @globalL.usedTags
         loc      .  usedTags  =  @bindL.usedTags

SEM GrTag
  | *    lhs      .  usedTags  =  Set.insert @grTrf @lhs.usedTags
%%]

-- AD 20060526: avoid AGC error msg
%%[10
SEM GrAdapt
  | *    loc      .  usedTags  =  Set.empty

SEM GrSplit
  | *    loc      .  usedTags  =  Set.empty
%%]

%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Remove unused tags %%%
%%%%%%%%%%%%%%%%%%%%%%%%%%

%%[8.remveUnusedTags
SEM GrModule
  | Mod  lhs  .  grTrf        =  GrModule_Mod @moduleNm
                                              @globalL.grTrf
                                              @bindL.grTrf
                                              @ctagsMp'
                                              @evalTagMp'
                                              @applyTagMp'
         loc  .  ctagsMp'     =  @ctagsMp   -- keep ordening info intact
              .  evalTagMp'   =  filter (\ ((t,_),_) -> Set.member t @usedTags) @evalTagMp 
              .  applyTagMp'  =  filter (\ ((t,_),_) -> Set.member t @usedTags) @applyTagMp
%%]
