%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Additional checks
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%[1
SEM Module
    | Module
        loc             .   errUndef    =   let ns = [ (ioccNm o >#< ppParens (ioccKind o),Just (map uoccRange os)) | (o,os) <- gamToAssocDupL @body.undefOccGam, not $ hsnIsProd $ ioccNm $ o ]
                                            in  (if null ns then [] else [rngLift @range mkErr_NamesNotIntrod' "" ns])
%%]

%%[9 hs
%%]
idDefOccGamCheckAllowedKind :: String -> [IdOccKind] -> IdDefOccGam -> [Err]
idDefOccGamCheckAllowedKind m ks g
  = case idDefOccGamPartitionByKind ks g of
      (_,[]) -> []
      (_,ds) -> [rngLift @range Err_DeclsNotAllowed m [ (ioccKind o,map ioccNm os) | os@(o:_) <- groupSortOn ioccKind (assocLKeys ds)]]

%%[9
%%]
SEM Declaration
    | Class
        loc             .   errNotAllowed
                                        =   idDefOccGamCheckAllowedKind "class" [IdOcc_Val] @where.idOccDefGam

%%[20
SEM Module
    | Module
        loc             .   errModName  =   case @name of
                                              Just n | n /= @lhs.moduleNm && not @lhs.isTopMod
                                                -> [rngLift @range Err_ModNameMismatch @lhs.moduleNm n]
                                              _ -> []
%%]

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Newtype may only have 1 con, 1 fld
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%[5
SEM Declaration
    | Newtype
        loc             .   errNewtype  =   case @constructors.eh of
                                              EH.DataConstr_Constr _
%%[[99
                                                                   _
%%]]
%%[[95
                                                                   _
%%]]
                                                                   [_]
                                                -> []
                                              _ -> [rngLift @range Err_Newtype @simpletype.name]
%%]
