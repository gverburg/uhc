GENERATING LLVM CODE
--------------------
In order to generate LLVM code from Haskell simply run the ehc 
binary (for version 8 or above) from the command line using the 
-cllvm option.  For example, from the root directory:

    bin/8/ehc -cllvm Test.hs

This will generate a Test.ll file.


COMPILING TO BYTECODE
---------------------
In order to run LLVM code, it has to be compiled to bytecodes.
We use the LLVM assembler and linker to do this.  We continue
the above example and show how Test.ll is compiled and linked
with the runtime library.  We assume that LLVM has been installed
and that the LLVM tools are in your path.

First we compile our test file:

    llvm-as Test.ll

Then we copy and compile the runtime library:

    cp src/rts/runtime.ll .
    llvm-as runtime.ll

And then we link the two files:

    llvm-ld Test.bc runtime.bc

The result is a bytecode file: a.out.bc


RUNNING THE BYTECODE
--------------------
Once you have compiled to bytecode, you have two options for
running your code.  You can either run the bytecode directly on
the interpreter or you can compile the bytecode to machine code.

To run the interpreter, use the lli command:

    lli a.out.bc

To generate native machine code, use the llc command:

   llc a.out.bc


KNOWN ISSUES
------------
On certain Linux X86 platforms, lli is unable to handle switch 
statements when running in JIT mode.  If this problem is encountered,
use the -force-interpreter flag.

