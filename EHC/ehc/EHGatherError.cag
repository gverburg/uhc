% $Id: EHGatherError.cag 269 2005-08-14 12:49:00Z cddouma $

%%[0
%include lhs2TeX.fmt
%include afp.fmt
%%]

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Conversion
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%[4 hs
gamErrToL :: Gam HsName ErrL -> ErrL 
gamErrToL = concat . map (\(n,e) -> mkNestErr (pp n) e) . gamToAssocL
%%]

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Gather errors
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%[1.GatherExpr
ATTR AllNT [ | | errL USE {++} {[]} : ErrL ]

SEM Expr
  | App         lhs         .   errL        =   mkNestErr @pp
                                                    (@func.errL ++ @arg.errL)
  | Lam         lhs         .   errL        =   mkNestErr @pp
                                                    (foErrL @fo_fitF_ ++ @arg.errL
                                                      ++ @body.errL)
  | Var         lhs         .   errL        =   mkNestErr @pp
                                                    (@nmErrs ++ foErrL @fo_)
  | AppTop      lhs         .   errL        =   mkNestErr @pp (@expr.errL)
  | IConst CConst
                lhs         .   errL        =   mkNestErr @pp (foErrL @fo_)
  | TypeAs      lhs         .   errL        =   mkNestErr @pp
                                                    (@expr.errL ++ @tyExpr.errL ++ foErrL @fo_)

SEM PatExpr
  | IConst CConst
                lhs         .   errL        =   mkNestErr @pp (foErrL @fo_)
%%]

%%[1.GatherRest
SEM TyExpr
  | Con         lhs         .   errL        =   mkNestErr @pp (@nmErrs)

SEM PatExpr
  | AppTop      lhs         .   errL        =   mkNestErr @pp (@patExpr.errL ++ @arityErrs)

SEM Decl
  | Val         lhs         .   errL        =   @patExpr.errL ++ @expr.errL ++ @sigMissErrs
%%]

%%[2
SEM Expr
  | Con         lhs         .   errL        =   mkNestErr @pp (foErrL @fo_)

SEM PatExpr
  | AppTop      lhs         .   errL        :=  mkNestErr @pp (@patExpr.errL ++ @arityErrs ++ foErrL @fo_fitR_)

SEM Decl
  | Val         lhs         .   errL        :=  @patExpr.errL ++ @expr.errL
%%]

%%[4
SEM Expr
  | Con         lhs         .   errL        :=  mkNestErr @pp (@nmErrs ++ foErrL @fo_)

SEM PatExpr
  | Con         lhs         .   errL        =   mkNestErr @pp (@nmErrs ++ foErrL @fo_fitR_)
  | TypeAs      lhs         .   errL        =   mkNestErr @pp (@patExpr.errL ++ @tyExpr.errL ++ foErrL @fo_)
  | AppTop      lhs         .   errL        :=  mkNestErr @pp (@patExpr.errL ++ @arityErrs ++ foErrL @fo_fitR_)
%%]
  | AppTop      lhs         .   errL        :=  mkNestErr @pp (@patExpr.errL ++ @arityErrs ++ foErrL @fo_ ++ foErrL @patFunFo)

%%[4_2
SEM Expr
  | Lam         loc         .   gamErrL     =   gamErrToL @errGam
                lhs         .   errL        :=  mkNestErr @pp
                                                    (foErrL @fo_fitF_ ++ @arg.errL ++ @body.errL ++ @gamErrL)
%%]

-- should be removed later 
%%[5
SEM PatExpr
  | IConst CConst
                lhs         .   errL        :=  []
%%]

%%[5_1
SEM Expr
  | Case        lhs         .   errL        =   @expr.errL ++ @alts.errL ++ mkNestErr @expr.pp @ebErrs
%%]

%%[6
SEM TyExpr
  | App         lhs         .   errL        =   mkNestErr @pp (@func.errL ++ @arg.errL ++ foErrL @fo_)
  | AppTop      lhs         .   errL        =   mkNestErr @pp (@tyExpr.errL)

SEM Decl
  | TySig       lhs         .   errL        =   mkNestErr @tyExpr.pp (@tyExpr.errL ++ foErrL @fo_)
  | Data        lhs         .   errL        =   mkNestErr @pp (@tyVars.errL ++ @constrs.errL ++ foErrL @fo_)

SEM DataConstr
  | Constr      lhs         .   errL        =   mkNestErr @pp (@fields.errL ++ foErrL @fo_)

SEM KiExpr
  | Con         lhs         .   errL        =   mkNestErr @pp (@nmErrs)
%%]

%%[7
SEM PatExpr
  | Rec         lhs         .   errL        =   mkNestErr @pp (@recPatExpr.errL)

SEM RecPatExpr
  | Empty       lhs         .   errL        =   mkNestErr @pp (foErrL @fo_)
  | Ext         lhs         .   errL        =   mkNestErr @pp (@recPatExpr.errL ++ @patExpr.errL ++ foErrL @fo_)

SEM Expr
  | Rec         lhs         .   errL        =   mkNestErr @pp (@recExpr.errL ++ foErrL @fo_)

SEM RecExpr
  | Empty       lhs         .   errL        =   mkNestErr @pp (foErrL @fo_)
  | Ext Upd     lhs         .   errL        =   mkNestErr @pp (@recExpr.errL ++ @expr.errL ++ foErrL @foKnRec)
%%]

%%[9
SEM RowTyExpr
  | Var         lhs         .   errL        =   mkNestErr @pp (foErrL @fo_)

SEM PrExpr
  | Class       lhs         .   errL        =   mkNestErr @pp (@tyExprs.errL ++ @nmErrs ++ foErrL @fo_)

SEM Expr
  | Lam         lhs         .   errL        :=  mkNestErr @pp
                                                    (foErrL @fo_fitF_
                                                      ++ @arg.errL ++ @body.errL)
  | AppTop      lhs         .   errL        :=  mkNestErr @pp (@expr.errL)
  | AppImpl     lhs         .   errL        =   mkNestErr @pp
                                                    (@nmErrs ++ foErrL @foPr ++ @func.errL ++ @arg.errL ++ @argPr.errL)
  | LamImpl     lhs         .   errL        =   mkNestErr @pp
                                                    (@nmErrs ++ foErrL @fo_fitF_ ++ foErrL @foPr ++ @arg.errL ++ @argPr.errL ++ @body.errL)
%%]

%%[11
SEM DataConstr
  | Constr      lhs         .   errL        :=  mkNestErr @pp (@fields.errL ++ @eqs.errL ++ foErrL @fo_)
%%]

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% PP of error
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%[1.PP
SEM Decls
  | Cons        loc         .   errPP       =   ppErrs @hd.errL
                lhs         .   errL        =   []

SEM Expr
  | Let         loc         .   letErrL     =   @dupErrs
                            .   errLetPP    =   ppErrs @letErrL
                            .   errBodyPP   =   ppErrs @body.errL
                lhs         .   errL        =   []

SEM AGItf
  | AGItf       loc         .   errTopPP    =   empty
%%]

%%[4_2
%%]
SEM AGItf
  | AGItf       loc         .   errTopPP    :=  ppErrs (@elimImprErrs)

%%[9
SEM Decl
  | Instance    loc         .   lErrL       =   @tyPrExpr.errL ++ @predNotPrfErrs ++ @supPrfErrs ++ @prfErrs
                            .   errInstPP   =   ppErrs @lErrL
                            .   errDeclsPP  =   ppErrs @decls.errL
                lhs         .   errL        =   []
  | InstanceIntro
                loc         .   lErrL       =   @expr.errL ++ @prExpr.errL ++ foErrL @foPr ++ @predErrs
                            .   errInstPP   =   ppErrs @lErrL
                lhs         .   errL        =   []

SEM Expr
  | Let         loc         .   letErrL     :=  @dupErrs ++ @prfErrs ++ @bodyPrfErrs

SEM AGItf
  | AGItf       loc         .   errTopPP    :=  ppErrs (@predNotPrfErrs)
%%]

%%[9_1
SEM Expr
  | Let         loc         .   letErrL     :=  @dupErrs ++ @gamErrL ++ @prfErrs ++ @bodyPrfErrs
%%]

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Gather all errors, for further processing elsewhere
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%[8
ATTR AllNT AGItf [ | | allErrL USE {++} {[]} : ErrL ]

SEM Decls
  | Cons        lhs         .   allErrL     =   @hd.errL ++ @hd.allErrL ++ @tl.allErrL

SEM Expr
  | Let         lhs         .   allErrL     =   @letErrL ++ @body.errL ++ @decls.allErrL ++ @body.allErrL
%%]

%%[9
SEM Decl
  | Instance    lhs         .   allErrL     =   @lErrL ++ @decls.allErrL
  | InstanceIntro
                lhs         .   allErrL     =   @lErrL

SEM AGItf
  | AGItf       lhs         .   allErrL     =   @predNotPrfErrs ++ @expr.allErrL
%%]

