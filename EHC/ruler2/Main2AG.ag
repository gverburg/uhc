-------------------------------------------------------------------------
-- Main for AG, pass 2
-------------------------------------------------------------------------

{
module Main2AG
  where

import Data.Maybe
import Data.Char
import Data.List
import qualified Data.Set as Set
import qualified Data.Map as Map
import UU.Pretty
-- import FPath
import Utils
import Opts
import Common
import PPUtils
import LaTeXFmtUtils
import ExprUtils
import ARuleUtils
import ViewSelUtils
-- import KeywParser
import FmGam
import RwExprGam
import ECnstrGam
import RulerAbsSyn2
-- import qualified RulerAbsSyn2 as AS2
-- import RulerUtils
-- import RulerAdmin
-- import RulerMkAdmin
}

-------------------------------------------------------------------------
-- Inclusion of split off parts
-------------------------------------------------------------------------

INCLUDE "RulerAbsSyn2AG.ag"
INCLUDE "RulerAbsSynCommonAG.ag"
INCLUDE "RulerAS2Opts.ag"
INCLUDE "RulerAS2Pretty.ag"

INCLUDE "ExprAbsSynAG.ag"
INCLUDE "ExprPrettyPrintAG.ag"
INCLUDE "ExprSelfAG.ag"

-- INCLUDE "ExprLaTeXAG.ag"

INCLUDE "ARuleAbsSynAG.ag"
INCLUDE "ARulePrettyPrintAG.ag"
INCLUDE "ARuleSelfAG.ag"

-------------------------------------------------------------------------
-- Interfacing to AST
-------------------------------------------------------------------------

WRAPPER AGItf 

{
ppAS2 :: Opts -> Decls -> PP_Doc
ppAS2 o r
  = pp_Syn_AGItf r2
  where r1 = sem_AGItf (AGItf_AGItf r)
        r2 = wrap_AGItf r1
                (Inh_AGItf {opts_Inh_AGItf = o})
}

