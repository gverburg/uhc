% $Id: EHC.lag 199 2004-05-12 19:11:13Z andres $

%%[0
%include lhs2TeX.fmt
%include afp.fmt
%%]

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Type inferencing for PatExpr
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Arity of pattern app
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%[1.arity
ATTR PatExpr [ | | arity: Int ]

SEM PatExpr
  | App         lhs         .  arity                =   @func.arity + 1
  | Con Var AppTop IConst CConst
                lhs         .  arity                =   0
%%]

%%[7
SEM PatExpr
  | Rec         lhs         .  arity                =   0
%%]

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Destruction function, known ty
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%[2.patFunTy
ATTR PatExpr [ | | patFunTy: Ty ]

SEM PatExpr
  | Con         loc         .  patFunTy             =   let  prTy = mkTyFreshProdFrom @lUniq (hsnProdArity @nm)
                                                        in   ([prTy] `mkTyArrow` prTy)
  | App         lhs         .  patFunTy             =   @func.patFunTy
  | * - App Con
                lhs         .  patFunTy             =   Ty_Any
%%]

%%[4.patFunTy
SEM PatExpr
  | Con         loc         .  (knUnTy,nmErrs)      =   case valGamLookup (hsnUn @nm) @lhs.valGam of
                                                          Nothing    ->  (Ty_Any,[Err_NamesNotIntrod [@nm]])
                                                          Just vgi   ->  (vgiTy vgi,[])
                            .  patFunTy             :=  let  [a,r]  = mkNewTyVarL 2 @lUniq
                                                             fo     = fitsIn instFIOpts @lUniq2 @knUnTy ([a] `mkTyArrow` r)
                                                        in   foTy fo
%%]

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Distribution of known ty
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%[1.knTy
ATTR PatExpr [ knTy: Ty ^^^ knTyL: TyL | | ]

SEM PatExpr
  | AppTop      loc         .  knProdTy
                                                    =   @lhs.knTy
                            .  (knTyL,aErrs)
                                                    =   case tyProdArgs @knProdTy of
                                                            tL | @patExpr.arity == length tL
                                                                -> (reverse tL,[])
                                                            tL  -> (reverse . take @patExpr.arity
                                                                     . (++ repeat Ty_Any) $ tL
                                                                   ,[Err_PatArity
                                                                     @knProdTy @patExpr.arity])
  | App         loc         .  (knArgTy,knTyL)
                                                    =   hdAndTl @lhs.knTyL
                arg         .  knTy                 =   @knArgTy
%%]

%%[1.knTy.Init
SEM Decl
  | Val         patExpr     .  knTyL                =   []

SEM Expr
  | Lam         arg         .  knTyL                =   []
%%]

%%[2.knTy
SEM PatExpr
  | AppTop      loc         .  patFunTy             =   @patExpr.patFunTy
                            .  (knResTy,knProdTy)   :=  tyArrowArgRes @patFunTy
%%]

%%[5
SEM CaseAlt
  | Pat         patExpr     .  knTyL                =   []
%%]

%%[7
SEM RecPatExpr
  | Ext         patExpr     .  knTyL                =   []
%%]

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Type of PatExpr
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%[1.valGam
ATTR PatExpr [ | valGam: ValGam | ]

SEM PatExpr
  | Var VarAs   loc         .  ty                   =   @lhs.knTy
                            .  addToGam             =   if @lhs.inclVarBind && @nm /= hsnWild
                                                        then  gamAdd @nm
                                                                (ValGamInfo @ty)
                                                        else  id
  | Var         lhs         .  valGam               =   @addToGam @lhs.valGam
  | VarAs       lhs         .  valGam               =   @addToGam @patExpr.valGam
%%]

%%[2.Var
ATTR PatExpr [ | tyCnstr: Cnstr | ty: Ty ]

SEM PatExpr
  | Var VarAs   loc         .  ty                   :=  tyEnsureNonBotTop @lUniq @lhs.knTy
  | VarAs       patExpr     .  knTy                 =   @ty
%%]

%%[2.Rest
SEM PatExpr
  | IConst      loc         .  ty                   =   tyInt
  | CConst      loc         .  ty                   =   tyChar
  | AppTop      loc         .  fo                   =   @lhs.knTy `fitsIn` @knResTy
                            .  ty                   =   foTy @fo
                patExpr     .  tyCnstr              =   foCnstr @fo |=> @lhs.tyCnstr
                lhs         .  ty                   =   @patExpr.tyCnstr |=> @ty
  | App         arg         .  knTy                 :=  @func.tyCnstr |=> @knArgTy
  | Con         loc         .  ty                   =   Ty_Any
%%]

%%[4.Rest
SEM PatExpr
  | AppTop Con  loc         .  fo                   :=  fitsIn @lhs.fiOpts @lUniq @lhs.knTy @knResTy
  | Con         loc         .  (knResTy,_)          =   tyArrowArgRes @patFunTy
                            .  ty                   :=  foTy @fo
                lhs         .  tyCnstr              =   foCnstr @fo |=> @lhs.tyCnstr
  | Var VarAs   loc         .  ty                   :=  tyInst1Exists @lUniq2 (tyEnsureNonBotTop @lUniq @lhs.knTy)
%%]

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Records
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%[7
ATTR RecPatExpr [ | valGam: ValGam ^^ tyCnstr: Cnstr | knTyRow: Ty ]

SEM RecPatExpr
  | Empty       lhs         .  knTyRow              =   tyRowEmpty
  | Ext         loc         .  patTy                =   mkNewTyVar @lUniq
                lhs         .  knTyRow              =   Ty_Ext @recPatExpr.knTyRow @nm @patTy
                patExpr     .  knTy                 =   @recPatExpr.tyCnstr |=> @patTy

SEM PatExpr
  | Rec         loc         .  fTy                  =   hsnRec `mkTyConApp` [@recPatExpr.knTyRow]
                            .  fo                   =   fitsIn @lhs.fiOpts @lUniq @lhs.knTy @fTy
                            .  ty                   =   foTy @fo
                recPatExpr  .  tyCnstr              =   foCnstr @fo |=> @lhs.tyCnstr
                lhs         .  ty                   =   @recPatExpr.tyCnstr |=> @ty
%%]

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Distr of additional info for codegen
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%[8
ATTR AllPatExpr [ tyGam: TyGam | | ]
%%]
