module $test
{ } 
{ $main 
    = { unit (#0/C/$Int 1)} 
; $!eval $10_0_0_0
    = { fetch $10_0_0_0   ; \$10_0_0_1 ->
        case $10_0_0_1 of
          { (#0/C/$Int $_)
                -> { unit $10_0_0_1} 
          ; (#0/C/$Char $_)
                -> { unit $10_0_0_1} 
          ; (#0/C/$$,0)
                -> { unit $10_0_0_1} 
          ; (#0/C/$$,2 $_ $_)
                -> { unit $10_0_0_1} 
          ; (#0/C/$$,3 $_ $_ $_)
                -> { unit $10_0_0_1} 
          ; (#0/C/$$,4 $_ $_ $_ $_)
                -> { unit $10_0_0_1} 
          ; (#0/C/$$,5 $_ $_ $_ $_ $_)
                -> { unit $10_0_0_1} 
          ; (#0/C/$$,6 $_ $_ $_ $_ $_ $_)
                -> { unit $10_0_0_1} 
          ; (#0/C/$$,7 $_ $_ $_ $_ $_ $_ $_)
                -> { unit $10_0_0_1} 
          ; (#0/C/$$,8 $_ $_ $_ $_ $_ $_ $_ $_)
                -> { unit $10_0_0_1} 
          ; (#0/C/$$,9 $_ $_ $_ $_ $_ $_ $_ $_ $_)
                -> { unit $10_0_0_1} 
          ; (#0/C/$$,10 $_ $_ $_ $_ $_ $_ $_ $_ $_ $_)
                -> { unit $10_0_0_1} 
          ; (#0/P/1/$!apply $10_0_0_14_0 $10_0_0_14_1)
                -> { unit $10_0_0_1} 
          ; (#0/P/2/$!apply $10_0_0_15_0 $10_0_0_15_1)
                -> { unit $10_0_0_1} 
          ; (#0/F/$undefined)
                -> { $undefined ; \$10_0_0_16_0 ->
                     update $10_0_0_0 $10_0_0_16_0  ; \() ->
                     unit $10_0_0_16_0
                   } 
          ; (#0/F/$!apply $10_0_0_17_1 $10_0_0_17_2)
                -> { $!apply $10_0_0_17_1 $10_0_0_17_2 ; \$10_0_0_17_0 ->
                     update $10_0_0_0 $10_0_0_17_0  ; \() ->
                     unit $10_0_0_17_0
                   } 
          ; (#0/F/$main)
                -> { $main ; \$10_0_0_18_0 ->
                     update $10_0_0_0 $10_0_0_18_0  ; \() ->
                     unit $10_0_0_18_0
                   } 
          } 
      } 
; $!apply $10_0_1_0 $10_0_1_1
    = { case $10_0_1_0 of
          { (#0/P/1/$!apply $10_0_1_2_0)
                -> { $!apply $10_0_1_2_0 $10_0_1_1} 
          ; (#0/P/2/$!apply)
                -> { unit (#0/P/1/$!apply $10_0_1_1)} 
          } 
      } 
; $undefined 
    = { ffi primUndefined { } } 
} 
ctags
{ $Int = $Int 0 1
  
; $Char = $Char 0 1
  
; $$,0 = $$,0 0 0
  
; $$,2 = $$,2 0 2
  
; $$,3 = $$,3 0 3
  
; $$,4 = $$,4 0 4
  
; $$,5 = $$,5 0 5
  
; $$,6 = $$,6 0 6
  
; $$,7 = $$,7 0 7
  
; $$,8 = $$,8 0 8
  
; $$,9 = $$,9 0 9
  
; $$,10 = $$,10 0 10
  
} 
evalmap
{ #0/C/$Int 1 -> unit
  
; #0/C/$Char 1 -> unit
  
; #0/C/$$,0 0 -> unit
  
; #0/C/$$,2 2 -> unit
  
; #0/C/$$,3 3 -> unit
  
; #0/C/$$,4 4 -> unit
  
; #0/C/$$,5 5 -> unit
  
; #0/C/$$,6 6 -> unit
  
; #0/C/$$,7 7 -> unit
  
; #0/C/$$,8 8 -> unit
  
; #0/C/$$,9 9 -> unit
  
; #0/C/$$,10 10 -> unit
  
; #0/P/1/$!apply 1 -> unit
  
; #0/P/2/$!apply 0 -> unit
  
; #0/F/$undefined 0 -> $undefined
  
; #0/F/$!apply 2 -> $!apply
  
; #0/F/$main 0 -> $main
  
} 
applymap
{ #0/P/1/$!apply 1 -> $!apply
  
; #0/P/2/$!apply 0 -> #0/P/1/$!apply
  
} 
