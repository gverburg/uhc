% $Id$

%%[0
%include lhs2TeX.fmt
%include afp.fmt
%%]

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Abstract syntax for C-- (portable assembly language)
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% C-- structure
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%




%%[8
DATA CmmUnit
  | Unit          statements   : CmmToplevels

DATA CmmToplevel
  | Section       name         : {String}
                  body         : CmmSection
  | Declaration   declaration  : CmmDeclaration
  | Procedure     procedure    : CmmProcedure

-- MISSING: pragma
DATA CmmSectionElement
  | Declaration   declaration  : CmmDeclaration
  | Procedure     procedure    : CmmProcedure
  | Data          data         : CmmData
  | Span          key          : CmmExpression
                  value        : CmmExpression
                  body         : CmmSection
 
DATA CmmDatum
  | Label         name         : {CmmName}
  | Align         align        : {Int}
  | Reserve       type         : {CmmType}
                  size         : CmmSize
                  init         : CmmInitString
DATA CmmSize
  | Single
  | Sized         size         : CmmExpression
  | Many

DATA CmmInitString
  | None
  | List          elements     : CmmExpressions
  | String        string       : String 
  | UnicodeString string       : String

DATA CmmDeclaration 
  | Import        names        : {CmmExternalNames}
  | Export        names        : {CmmExternalNames}
  | Constant      type         : {CmmOptionalType}
                  name         : {CmmName}
		  value        : CmmExpression
  | Typedef       type         : {CmmType}
                  names        : {CmmNames}
  | Var           invariant    : {Bool} 
                  kind         : {CmmKind}
                  type         : {CmmType}
                  names        : {CmmHwNames}
  | Target        targetSpec   : {CmmTargetSpec}
  
DATA CmmProcedure
  | Procedure     callConv     : {CmmCallConv}
                  name         : {CmmName}
                  args         : {CmmFormals}
                  body         : CmmBody

DATA CmmBodyElement
  | Declaration   declaration  : CmmDeclaration
  | StackReserve  data         : CmmData
  | Statement     statement    : CmmStatement

-- MISSING: Recoverable assignment of primitive operations
-- MISSING: Targets on Call, TailCall and Goto
DATA CmmStatement
  | Nop
  | If            condition    : CmmExpression
                  body         : CmmBody
  | IfElse        condition    : CmmExpression
                  ifbody       : CmmBody
                  elsebody     : CmmBody
  | Switch        expr         : CmmExpression
                  alts         : CmmAlternatives
  | Span          key          : CmmExpression
                  value        : CmmExpression
		  body         : CmmBody
  | Assign        lvals        : CmmLValues
                  expressions  : CmmExpressions
  | Call          callConv     : {CmmCallConv}
                  fun          : CmmExpression
		  args         : CmmActuals
                  recievers    : {CmmKindedNames}
                  flow         : CmmFlow
  | TailCall      callConv     : {CmmCallConv}
                  fun          : CmmExpression
		  args         : CmmActuals
  | Return        callConv     : {CmmCallConv}
                  args         : CmmActuals
  | Label         name         : {CmmName}
  | GoTo          target       : CmmExpression
  | Continuation  name         : {CmmName}
                  args         : {CmmKindedName}
  | CutTo         cont         : CmmExpression
                  args         : CmmActuals
                  flow         : CmmFlow

-- TODO: Better Float representation
-- MISSING: Assertions on MemRef
-- MISSING: Infix operations
DATA CmmExpression
  | Int           val          : {Int}
                  type         : {CmmOptionalType}
  | Float         val          : {Double}
                  type         : {CmmOptionalType}
  | Char          val          : {Char}
                  type         : {CmmOptionalType}
  | Var           name         : {CmmName}
  | MemRef        type         : {CmmType}
                  location     : CmmExpression
  | Parens        expr         : CmmExpression
  | Not           expr         : CmmExpression
  | Primitive     name         : {CmmName}
                  args         : CmmActuals

DATA CmmActual
  | Actual        kind         : {CmmKind}
                  val          : CmmExpression

-- MISSING: Assertions on MemRef
DATA CmmLValue
  | Var           name         : {CmmName}
  | MemRef        type         : {CmmType}
                  location     : CmmExpression

DATA CmmAlternative
  | Alt           ranges       : CmmRanges
                  body         : CmmBody

DATA CmmRange
 | Single        expr          : CmmExpression
 | Ranged        from          : CmmExpression
                 to            : CmmExpression

DATA CmmFlowElement
  | Aborts
  | NoReturn
  | Cuts         names         : {CmmNames}
  | Unwinds      names         : {CmmNames}
  | Returns      names         : {CmmNames}


TYPE CmmFlow            = [CmmFlowElement]
TYPE CmmToplevels       = [CmmToplevel]
TYPE CmmSection         = [CmmSectionElement]
TYPE CmmData            = [CmmDatum]
TYPE CmmExpressions     = [CmmExpression]
TYPE CmmActuals         = [CmmActual]
TYPE CmmLValues         = [CmmLValue]
TYPE CmmAlternatives    = [CmmAlternative]
TYPE CmmRanges          = [CmmRange]
TYPE CmmBody            = [CmmBodyElement]
%%]

%%[8
SET AllFlow               = CmmFlowElement CmmFlow
SET AllAlternatives       = CmmAlternative CmmAlternatives
SET AllData               = CmmDatum CmmData
SET AllToplevels          = CmmToplevel CmmToplevels
SET AllCmmSection         = CmmSectionElement CmmSection
SET AllCmmExpressions     = CmmExpression CmmExpressions
SET AllCmmActuals         = CmmActual CmmActuals
SET AllCmmRanges          = CmmRange CmmRanges
SET AllCmmLValues         = CmmLValue CmmLValues
SET AllBody               = CmmBodyElement CmmBody

SET AllNT                 = AllAlternatives AllData AllToplevels AllCmmSection
                            AllCmmExpressions AllCmmActuals AllCmmRanges AllCmmLValues
                            AllBody CmmSize CmmInitString CmmDeclaration CmmProcedure
                            CmmStatement AllFlow
SET All                   = AllNT CmmUnit
%%]
