{
import UU.Pretty
import Data.List

import Debug.Trace

data Direction 
  = Node
  | In 
  | InOut 
  | Out
  deriving (Show,Eq,Ord)
}

-- INTERFACE SPECIFICATION

TYPE Layers          = [Layer]
TYPE Interfaces      = [Interface]
TYPE Parameters      = [Parameter]
TYPE Rules           = [Rule]
TYPE Judgments       = [Judgment]
TYPE BodyAssignments = [BodyAssignment]

DATA Layer
  |  RawLayer          name       : {String}
                       parent     : {Maybe String}
                       interfaces : Interfaces
  |  Layer             name       : {String}
                       parent     : {Maybe Layer}
                       interfaces : Interfaces

DATA Interface
  |  Interface         name       : {String}
                       params     : Parameters
                       uses       : Parameters
                       pattern    : {String}

DATA Parameter
  |  Parameter         name       : {String}
                       direction  : {Direction}
                       type       : {String}
                       visible    : {Bool}
                       directives : {[String]}


-- IMPLEMENTATION STRUCTURE

DATA Implementation
  | RawImplementation     layer      : {String}
                          rules      : Rules
  | Implementation        layer      : Layer
                          rules      : Rules

DATA Rule
  | RawRule           name           : {String}
                      interface      : {String}
                      preconditions  : Judgments
                      postcondition  : Judgments
  | Rule              name           : {String}
                      interface      : Interface
                      preconditions  : Judgments
                      postcondition  : Judgment

DATA Judgment
  | RawJudgment1      name           : {String}
                      interface      : {String}
                      body           : {String}
                      defs           : {[(String,String)]}
  | RawJudgment2      name           : {String}
                      interface      : {String}
                      body           : {[(String,String)]}
                      defs           : {[(String,String)]}
  | Judgment          name           : {String}
                      interface      : Interface
                      body           : BodyAssignments
                      defs           : {[(String,String)]} 
                      
DATA BodyAssignment
  | BodyAssignment    param          : Parameter
                      value          : String                                        

DERIVING Layer Interface Parameter Implementation Rule Judgment BodyAssignment : Show 

INCLUDE "PrettyHaskell.ag"