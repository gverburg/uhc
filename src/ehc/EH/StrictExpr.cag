%%[0
%include lhs2TeX.fmt
%include afp.fmt
%%]

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Strict Analizer
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%[2
ATTR AllExpr [ knPhi : Ann  | | ]

ATTR AllExpr [ | | strGam : ValGamStrict ]

ATTR AllExpr [ | | infAnnTy : AnnTy ]

ATTR AllPatExpr [ knPhi : Ann  | | strGam : ValGamStrict  bndVars : { [ HsName ] } ]

ATTR Decls [ knPhi : Ann  | | strGam : ValGamStrict bndVars : { [ HsName ] } ]

ATTR Decl [ knPhi : Ann  | | strGam : ValGamStrict bndVars : { [ HsName ] } ]

%%]

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Strict Analizer
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%[2

SEM AGItf 
  | AGItf       (expr.gUniq,loc.uniq1)              =   mkNewLevUID @lhs.gUniq
                expr        .   knPhi               =   mkPhiVar @loc.uniq1 
                expr        .   strGam              =   emptyGam
SEM Expr
  | IConst      lhs         .   strGam              =   emptyGam
                lhs         .   infAnnTy            =   AnyAnnTy
  | CConst      lhs         .   strGam              =   emptyGam
                lhs         .   infAnnTy            =   AnyAnnTy
  | SConst      lhs         .   strGam              =   emptyGam
                lhs         .   infAnnTy            =   AnyAnnTy
  | Undefined   lhs         .   strGam              =   emptyGam
                lhs         .   infAnnTy            =   AnyAnnTy
  | Var         lhs         .   strGam              =   gamAdd @lhs.knPhi emptyGam
                lhs         .   infAnnTy            =   anotateTy (lhs.finTyVarMp |=> @ty)
  | Let         body        .   knPhi               =   Strict
                loc         .   gam2                =   @body.strGam

                loc         .   x                   =   head @decls.bndVars
                loc         .   phi0                =   case gamLookup @loc.x @loc.gam2 of
                                                            Just phi -> phi
                                                            Nothing  -> Lazy
                decls       .   knPhi               =   @lhs.knPhi `join` loc.phi0

                lhs         .   infAnnTy            =   @body.infAnnTy
                lhs         .   strGam              =   gamSplit decls.strGam (gamContaintment lhs.knPhi (gamDel loc.x @loc.gam21))

SEM Decl
  | Val         lhs    

patExpr         : PatExpr
expr            : Expr

%%]

